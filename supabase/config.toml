
# A string used to distinguish different Supabase projects on the same host. Defaults to the working
# directory name when running `supabase init`.
project_id = "twyne-ai"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage", "extensions"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54324
smtp_port = 54325
pop3_port = 54326

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Uncomment to customize email template
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = true
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false

# Configure one of the supported SMS providers: `twilio`, `messagebird`, `textlocal`, `vonage`.
[auth.sms.twilio]
enabled = false
account_sid = ""
message_service_sid = ""
# Find this at https://twilio.com/console.
auth_token = "env(SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN)"

# Use use alternative templates.
# [auth.sms.twilio.template.sms_otp]
# body = "Your code is {{ .Code }}. It expires in {{ .Expires }}."

# [auth.sms.twilio.template.sms_verification]
# body = "Your confirmation code is {{ .Code }}."

# Override number format regularization.
# [auth.phone_template]
# example = "+11234567890"

# Use custom templates for various auth flows.
[auth.template]

[auth.template.sms]
# Customize the SMS template used for authentication.
confirmation = "Your confirmation code is {{ .Code }}"
invite = "You have been invited to join. Visit {{ .SiteURL }}?invitation_id={{ .InvitationID }}&invitation_token={{ .Token }} to accept."
magic_link = "Your login link to {{ .SiteURL }} is {{ .ActionLink }}"
otp = "Your one-time passcode to log in is {{ .Code }}"
recovery = "Your code to recover your password is {{ .Code }}"

# Define custom actions for auth hooks.
# [auth.hooks.custom_access_token]
# enabled = true
# uri = "pg-functions://hooks/custom_access_token"

# [auth.hooks.custom_account_delete]
# enabled = true
# uri = "pg-functions://hooks/custom_account_delete"

# [auth.hooks.custom_pre_signup]
# enabled = true
# uri = "pg-functions://hooks/custom_pre_signup"

# [auth.hooks.custom_post_signup]
# enabled = true
# uri = "pg-functions://hooks/custom_post_signup"

# [auth.hooks.custom_post_confirm_signup]
# enabled = true
# uri = "pg-functions://hooks/custom_post_confirm_signup"

[functions]
# Port to serve Functions API from.
port = 54321

# Allow foreign connections to the Functions server. You'll need to set this if you're
# connecting from a different network (e.g. from a different Supabase project).
allowed_origin = "*"

[observability]
# Will be passed to Vector as a source.
# https://vector.dev/docs/reference/configuration/sources/host_metrics/
host_metrics_scrape_interval_secs = 3
# Will be passed to Vector as a source.
# https://vector.dev/docs/reference/configuration/sources/self_metrics/
vector_metrics_scrape_interval_secs = 3
# https://vector.dev/docs/reference/configuration/sources/host_metrics/#rebase_metrics
metrics_name_rebase = false

[analytics]
enabled = false
port = 54327
vector_port = 54328
# Configure one of the supported backends: `postgres`, `bigquery`.
backend = "postgres"
